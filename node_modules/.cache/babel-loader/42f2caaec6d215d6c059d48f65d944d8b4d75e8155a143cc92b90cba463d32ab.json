{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"page\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FooterNav = _resolveComponent(\"FooterNav\");\n  return $data.page ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.page.slices, (item, i) => {\n    return _openBlock(), _createBlock(_resolveDynamicComponent(item.component), {\n      key: i,\n      data: item.data,\n      clickEvents: $props.clickEvents\n    }, null, 8 /* PROPS */, [\"data\", \"clickEvents\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_FooterNav)])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;;;;SAAaC,UAAI,kBAA5BC,oBAQM,OARNC,UAQM,sBAPFD,oBAIuCE,6BAJRH,UAAI,CAACI,MAAM,GAAvBC,IAAI,EAAEC,CAAC;yBAA1BC,aAIuCC,yBAFlCH,IAAI,CAACI,SAAS;MADlBC,GAAG,EAAEJ,CAAC;MAENK,IAAI,EAAEN,IAAI,CAACM,IAAI;MACfC,WAAW,EAAEC;;kCAChBC,aAAuBC","names":["class","$data","_createElementBlock","_hoisted_1","_Fragment","slices","item","i","_createBlock","_resolveDynamicComponent","component","key","data","clickEvents","$props","_createVNode","_component_FooterNav"],"sourceRoot":"","sources":["/Users/rebj/Sites/staging-iyd/src/Page.vue"],"sourcesContent":["<template>\n  <div class=\"page\" v-if=\"page\">\n      <component v-for=\"(item, i) in page.slices\" \n      :key=\"i\" \n      :is=\"item.component\" \n      :data=\"item.data\"\n      :clickEvents=\"clickEvents\"></component>\n    <FooterNav></FooterNav>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  \n  name: 'PagePage',\n  props: {\n    scrollPos: {\n      type: Number,\n      default: 0\n    },\n    clickEvents: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  components: {\n  },\n  watch: {\n  },\n  methods: {},\n  data() {\n    return {\n      page: null\n    }\n  },\n  mounted() {\n    try {\n      this.page = this.$cms.routes.filter(i => i.path === window.location.pathname)[0];\n    } catch {\n      console.log(\"page doesn't exist\");\n      window.location.href=\"./404\";\n    }\n  },\n  beforeUpdate() {\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n@import \"./styles.scss\";\n@import \"./fonts.scss\";\n\n.page {\n  padding-top: 100px;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}