{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, Transition as _Transition, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/IYD-White-Small.svg';\nimport _imports_1 from '../assets/glow-sphere.svg';\nimport _imports_2 from '../assets/hamburger.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-257c8456\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"nav\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = [\"innerHTML\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"logo\"\n}, [/*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0\n})])], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"scrollbar\",\n  ref: \"scrollbar\"\n};\nconst _hoisted_6 = {\n  src: _imports_1,\n  ref: \"glow\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"hamburger\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2,\n  id: \"hamburgerMenu\"\n})], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TimeSun = _resolveComponent(\"TimeSun\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createBlock(_Transition, {\n    key: $data.hour + $data.minute,\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"p\", {\n      class: _normalizeClass(`time ${$props.showNav ? `white` : ``}`)\n    }, [_createVNode(_component_TimeSun, {\n      class: \"sun\",\n      color: $props.showNav ? `#FFFFFF` : ``\n    }, null, 8 /* PROPS */, [\"color\"]), _createElementVNode(\"span\", {\n      innerHTML: $data.hour\n    }, null, 8 /* PROPS */, _hoisted_2), _createTextVNode(\":\"), _createElementVNode(\"span\", {\n      innerHTML: $data.minute\n    }, null, 8 /* PROPS */, _hoisted_3)], 2 /* CLASS */)]),\n\n    _: 1 /* STABLE */\n  })), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"img\", _hoisted_6, null, 512 /* NEED_PATCH */)], 512 /* NEED_PATCH */), _hoisted_7]);\n}","map":{"version":3,"mappings":";OAUaA,UAAmC;OAIrCC,UAA+B;OAG/BC,UAA6B;;;EAhBjCC,KAAK,EAAC;AAAK;;;gEAOdC,oBAIM;EAJDD,KAAK,EAAC;AAAM,iBACfC,oBAEI;EAFDC,IAAI,EAAC;AAAG,iBACTD,oBAA0C;EAArCE,GAAmC,EAAnCN;AAAmC;;EAGvCG,KAAK,EAAC,WAAW;EAACI,GAAG,EAAC;;;EACpBD,GAA+B,EAA/BL,UAA+B;EAACM,GAAG,EAAC;;gEAE3CH,oBAEM;EAFDD,KAAK,EAAC;AAAW,iBACpBC,oBAAuD;EAAlDE,GAA6B,EAA7BJ,UAA6B;EAACM,EAAE,EAAC;;;;;uBAhB1CC,oBAmBM,OAnBNC,UAmBM,kBAlBJC,aAKaC;IALAC,GAAG,EAAEC,UAAI,GAACA,YAAM;IAAEC,MAAM,EAAN;;sBAC7B,MAGI,CAHJX,oBAGI;MAHAD,KAAK,0BAAUa,cAAO;QACxBC,aAAiEC;MAAxDf,KAAK,EAAC,KAAK;MAAEgB,KAAK,EAAEH,cAAO;wCACpCZ,oBAA2B;MAArBgB,SAAa,EAALN;IAAI,sDAAS,GAAC,uBAA6B;MAAvBM,SAAe,EAAPN;IAAM;;;OAGpDO,UAIM,EACNjB,oBAEM,OAFNkB,UAEM,GADJlB,oBAAiD,OAAjDmB,UAAiD,uDAEnDC,UAEM","names":["_imports_0","_imports_1","_imports_2","class","_createElementVNode","href","src","ref","id","_createElementBlock","_hoisted_1","_createBlock","_Transition","key","$data","appear","$props","_createVNode","_component_TimeSun","color","innerHTML","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7"],"sourceRoot":"","sources":["/Users/rebj/Sites/inyourdaylight/src/components/HeaderNav.vue"],"sourcesContent":["<template>\n  <div class=\"nav\">\n    <transition :key=\"hour+minute\" appear>\n      <p :class=\"`time ${showNav ? `white` : ``}`\">\n        <TimeSun class=\"sun\" :color=\"showNav ? `#FFFFFF` : ``\"></TimeSun>\n        <span v-html=\"hour\"></span>:<span v-html=\"minute\"></span>\n      </p>\n    </transition>\n    <div class=\"logo\">\n      <a href=\"/\">\n        <img src=\"../assets/IYD-White-Small.svg\"/>\n      </a>\n    </div>\n    <div class=\"scrollbar\" ref=\"scrollbar\">\n      <img src=\"../assets/glow-sphere.svg\" ref=\"glow\"/>\n    </div>\n    <div class=\"hamburger\">\n      <img src=\"../assets/hamburger.svg\" id=\"hamburgerMenu\"/>\n    </div>\n  \n  </div>\n</template>\n\n<script>\nimport TimeSun from './TimeSun.vue';\nexport default {\n  name: 'HeaderNav',\n  components: {\n    TimeSun\n  },\n  props: {\n    scrollLimit: {\n      type: Number,\n      default: 0\n    },\n    scrollPos: {\n      type: Number,\n      default: 0\n    },\n    showNav: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    scrollPos(scrollPos) {\n      let glowSize = this.$refs.glow.getBoundingClientRect().height;\n      this.$refs.glow.style = `top: ${scrollPos * ((this.scrollBarHeight - (glowSize) / 2) / this.scrollLimit)}px`\n    },\n    // showNav(showNav) {\n    // }\n  },\n  methods: {\n    getTime() {\n      this.date = new Date();\n      this.minute = this.date.getMinutes().toString().padStart(2, '0');\n      this.hour = this.date.getHours().toString();\n    },\n  },\n  data() {\n    return {\n      date: new Date(),\n      scrollBarHeight: 0,\n      minute:0,\n      hour:0\n    }\n  },\n  \n  mounted() {\n    this.getTime();\n    this.scrollBarHeight = this.$refs.scrollbar.getBoundingClientRect().height;\n    let countdownTilMinuteInterval = (60 - this.date.getSeconds()) * 1000 + this.date.getMilliseconds();\n\n    setTimeout(() => {\n      this.getTime();\n      setInterval(() => {\n        this.getTime();\n      }, 60000);\n    }, countdownTilMinuteInterval)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n@import \"../styles.scss\";\n.time {\n  color: $gold;\n  position: fixed;\n  z-index: 10;\n  top: 20px;\n  left: 20px;\n  .sun {\n    display: inline-block;\n    height: 20px;\n  }\n}\n.white {\n  color: white;\n}\n.logo {\n  position: fixed;\n  left: 50%;\n  top: 20px;\n  transform: translateX(-50%);\n  z-index: 10;\n  img {\n    max-width: 100px;\n  }\n}\n.scrollbar {\n  position: fixed;\n  right: 30px;\n  height: 50vh;\n  border-right: 1px solid white;\n  top: 50%;\n  transform: translateY(-50%);\n  img {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    top: 0;\n  }\n}\n.hamburger {\n  position: fixed;\n  right: 20px;\n  top: 30px;\n  z-index: 10;\n  cursor: pointer;\n  img {\n    width: 30px;\n  }\n}\n\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}