{"ast":null,"code":"export default {\n  name: 'NavSticky',\n  props: {\n    scrollLimit: {\n      type: Number,\n      default: 0\n    },\n    scrollPos: {\n      type: Number,\n      default: 0\n    }\n  },\n  watch: {\n    scrollPos(scrollPos) {\n      let glowSize = this.$refs.glow.getBoundingClientRect().height;\n      this.$refs.glow.style = `top: ${scrollPos * ((this.scrollBarHeight - glowSize / 2) / this.scrollLimit)}px`;\n    }\n  },\n  methods: {},\n  data() {\n    return {\n      date: new Date(),\n      scrollBarHeight: 0,\n      minute: 0,\n      hour: 0\n    };\n  },\n  mounted() {\n    this.minute = this.date.getMinutes().toString().padStart(2, '0');\n    this.hour = this.date.getHours();\n    this.scrollBarHeight = this.$refs.scrollbar.getBoundingClientRect().height;\n    console.log();\n    setTimeout(() => {}, (60 - this.date.getSeconds()) * 1000);\n  }\n};","map":{"version":3,"mappings":"AAsBA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,SAAS,EAAE;MACTH,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDE,KAAK,EAAE;IACLD,SAAS,CAACA,SAAS,EAAE;MACnB,IAAIE,QAAO,GAAI,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,qBAAqB,EAAE,CAACC,MAAM;MAC7D,IAAI,CAACH,KAAK,CAACC,IAAI,CAACG,KAAI,GAAK,QAAOP,SAAQ,IAAK,CAAC,IAAI,CAACQ,eAAc,GAAKN,QAAQ,GAAI,CAAC,IAAI,IAAI,CAACN,WAAW,CAAE,IAAE;IAC7G;EACF,CAAC;EACDa,OAAO,EAAE,CAET,CAAC;EACDC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAIC,IAAI;MACdJ,eAAe,EAAE,CAAC;MAClBK,MAAM,EAAC,CAAC;MACRC,IAAI,EAAC;IACP;EACF,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACF,MAAK,GAAI,IAAI,CAACF,IAAI,CAACK,UAAU,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAChE,IAAI,CAACJ,IAAG,GAAI,IAAI,CAACH,IAAI,CAACQ,QAAQ,EAAE;IAChC,IAAI,CAACX,eAAc,GAAI,IAAI,CAACL,KAAK,CAACiB,SAAS,CAACf,qBAAqB,EAAE,CAACC,MAAM;IAC1Ee,OAAO,CAACC,GAAG,EAAE;IACbC,UAAU,CAAC,MAAM,CAEjB,CAAC,EAAE,CAAC,EAAC,GAAI,IAAI,CAACZ,IAAI,CAACa,UAAU,EAAE,IAAI,IAAI;EACzC;AACF","names":["name","props","scrollLimit","type","Number","default","scrollPos","watch","glowSize","$refs","glow","getBoundingClientRect","height","style","scrollBarHeight","methods","data","date","Date","minute","hour","mounted","getMinutes","toString","padStart","getHours","scrollbar","console","log","setTimeout","getSeconds"],"sourceRoot":"","sources":["/Users/rebj/Sites/inyourdaylight/src/components/NavSticky.vue"],"sourcesContent":["<template>\n  <div class=\"nav\">\n    <p class=\"time\">\n      <span><img class=\"sun\" src=\"../assets/halfsun.svg\"/></span>\n      <span :key=\"hour+minute+''\">{{hour}}:{{ minute}}</span>\n    </p>\n    <div class=\"logo\">\n      <a href=\"/\">\n        <img src=\"../assets/IYD-White-Small.svg\"/>\n      </a>\n    </div>\n    <div class=\"scrollbar\" ref=\"scrollbar\">\n      <img src=\"../assets/glow-sphere.svg\" ref=\"glow\"/>\n    </div>\n    <div class=\"hamburger\">\n      <img src=\"../assets/hamburger.svg\"/>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'NavSticky',\n  props: {\n    scrollLimit: {\n      type: Number,\n      default: 0\n    },\n    scrollPos: {\n      type: Number,\n      default: 0\n    }\n  },\n  watch: {\n    scrollPos(scrollPos) {\n      let glowSize = this.$refs.glow.getBoundingClientRect().height;\n      this.$refs.glow.style = `top: ${scrollPos * ((this.scrollBarHeight - (glowSize) / 2) / this.scrollLimit)}px`\n    }\n  },\n  methods: {\n\n  },\n  data() {\n    return {\n      date: new Date,\n      scrollBarHeight: 0,\n      minute:0,\n      hour:0\n    }\n  },\n  mounted() {\n    this.minute = this.date.getMinutes().toString().padStart(2, '0');\n    this.hour = this.date.getHours();\n    this.scrollBarHeight = this.$refs.scrollbar.getBoundingClientRect().height;\n    console.log();\n    setTimeout(() => {\n      \n    }, (60 - this.date.getSeconds()) * 1000)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n@import \"../styles.scss\";\n.time {\n  color: $gold;\n  position: fixed;\n  top: 20px;\n  left: 20px;\n  .sun {\n    height: 20px;\n    padding-right: 5px;\n  }\n}\n.logo {\n  position: fixed;\n  left: 50%;\n  top: 20px;\n  transform: translateX(-50%);\n  img {\n    max-width: 100px;\n  }\n}\n.scrollbar {\n  position: fixed;\n  right: 30px;\n  height: 50vh;\n  border-right: 1px solid white;\n  top: 50%;\n  transform: translateY(-50%);\n  img {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    top: 0;\n  }\n}\n.hamburger {\n  position: fixed;\n  right: 20px;\n  top: 30px;\n  img {\n    width: 30px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}