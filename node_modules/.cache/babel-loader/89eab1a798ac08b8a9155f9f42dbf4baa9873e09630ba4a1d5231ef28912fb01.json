{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, Transition as _Transition, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/glow-sphere.svg';\nimport _imports_1 from '../assets/IYD-White-Small.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-257c8456\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"scrollbar\",\n  ref: \"scrollbar\"\n};\nconst _hoisted_2 = {\n  src: _imports_0,\n  ref: \"glow\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"line top\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"line mid\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"line bot\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_6 = [_hoisted_3, _hoisted_4, _hoisted_5];\nconst _hoisted_7 = [\"innerHTML\"];\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \":\", -1 /* HOISTED */));\nconst _hoisted_9 = [\"innerHTML\"];\nconst _hoisted_10 = {\n  class: \"desktop-nav\"\n};\nconst _hoisted_11 = {\n  class: \"logo\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TimeSun = _resolveComponent(\"TimeSun\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(`nav ${$props.navColor}`)\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"img\", _hoisted_2, null, 512 /* NEED_PATCH */)], 512 /* NEED_PATCH */), _createElementVNode(\"div\", {\n    class: _normalizeClass(`hamburger ${$props.showNav ? `blue` : ``}`),\n    id: \"hamburgerMenu\"\n  }, _hoisted_6, 2 /* CLASS */), (_openBlock(), _createBlock(_Transition, {\n    key: $data.hour + $data.minute,\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"p\", {\n      class: _normalizeClass(`time ${$props.showNav ? `blue` : ``}`)\n    }, [_createVNode(_component_TimeSun, {\n      class: \"sun\",\n      color: $props.showNav ? `#1B2227` : ``\n    }, null, 8 /* PROPS */, [\"color\"]), _createElementVNode(\"span\", {\n      innerHTML: $data.hour\n    }, null, 8 /* PROPS */, _hoisted_7), _hoisted_8, _createElementVNode(\"span\", {\n      innerHTML: $data.minute\n    }, null, 8 /* PROPS */, _hoisted_9)], 2 /* CLASS */)]),\n\n    _: 1 /* STABLE */\n  })), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Math.floor(_ctx.$cms.nav.length / 2), item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item\n    }, [_createVNode(_component_router_link, {\n      to: item.link\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(item.text), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"li\", null, [_createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_hoisted_12]),\n    _: 1 /* STABLE */\n  })])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.$cms.nav, (item, i) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: i\n    }, [_createVNode(_component_router_link, {\n      to: item.link\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(item.text), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 2 /* CLASS */);\n}","map":{"version":3,"mappings":";OAIWA,UAA+B;OAqBvBC,UAAmC;;;EAtB7CC,KAAK,EAAC,WAAW;EAACC,GAAG,EAAC;;;EACpBC,GAA+B,EAA/BJ,UAA+B;EAACG,GAAG,EAAC;;gEAGzCE,oBAA4B;EAAvBH,KAAK,EAAC;AAAU;gEACrBG,oBAA4B;EAAvBH,KAAK,EAAC;AAAU;gEACrBG,oBAA4B;EAAvBH,KAAK,EAAC;AAAU;oBAFrBI,UAA4B,EAC5BC,UAA4B,EAC5BC,UAA4B;;gEAKOH,oBAAc,cAAR,GAAC;;;EAGvCH,KAAK,EAAC;AAAa;;EAMbA,KAAK,EAAC;AAAM;iEAEbG,oBAA0C;EAArCD,GAAmC,EAAnCH;AAAmC;;;;;uBAxBpDQ,oBAiCM;IAjCAP,KAAK,yBAASQ,eAAQ;MAE1BL,oBAEM,OAFNM,UAEM,GADJN,oBAAiD,OAAjDO,UAAiD,uDAEnDP,oBAIM;IAJAH,KAAK,+BAAeQ,cAAO;IAAkBG,EAAE,EAAC;gDAKtDC,aAKmBC;IALNC,GAAG,EAAEC,UAAI,GAACA,YAAM;IAAEC,MAAM,EAAN;;sBACvB,MAGI,CAHJb,oBAGI;MAHAH,KAAK,0BAAUQ,cAAO;QACxBS,aAAiEC;MAAxDlB,KAAK,EAAC,KAAK;MAAEmB,KAAK,EAAEX,cAAO;wCACpCL,oBAA2B;MAArBiB,SAAa,EAALL;IAAI,qCAASM,UAAc,sBAA6B;MAAvBD,SAAe,EAAPL;IAAM;;;OAGvEZ,oBAgBM,OAhBNmB,WAgBM,GAfJnB,oBAcK,gCAbHI,oBAEKgB,6BAFeC,IAAI,CAACC,KAAK,CAACC,SAAI,CAACC,GAAG,CAACC,MAAM,OAAlCC,IAAI;yBAAhBtB,oBAEK;MAFiDO,GAAG,EAAEe;IAAI,IAC7DZ,aAA0Da;MAA5CC,EAAE,EAAEF,IAAI,CAACG;;wBAAM,MAAe,mCAAZH,IAAI,CAACI,IAAI;;;;kCAE3C9B,oBAMK,aALHA,oBAIM,OAJN+B,WAIM,GAHJjB,aAEca;IAFDC,EAAE,EAAC;EAAG;sBACjB,MAA0C,CAA1CI,WAA0C;;6BAIhD5B,oBAEKgB,6BAFmBG,SAAI,CAACC,GAAG,GAApBE,IAAI,EAAEO,CAAC;yBAAnB7B,oBAEK;MAF8BO,GAAG,EAAEsB;IAAC,IACvCnB,aAA0Da;MAA5CC,EAAE,EAAEF,IAAI,CAACG;;wBAAM,MAAe,mCAAZH,IAAI,CAACI,IAAI","names":["_imports_0","_imports_1","class","ref","src","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_createElementBlock","$props","_hoisted_1","_hoisted_2","id","_createBlock","_Transition","key","$data","appear","_createVNode","_component_TimeSun","color","innerHTML","_hoisted_8","_hoisted_10","_Fragment","Math","floor","_ctx","nav","length","item","_component_router_link","to","link","text","_hoisted_11","_hoisted_12","i"],"sourceRoot":"","sources":["/Users/rebj/Sites/staging-iyd/src/components/HeaderNav.vue"],"sourcesContent":["<template>\n  <div :class=\"`nav ${navColor}`\">\n    \n    <div class=\"scrollbar\" ref=\"scrollbar\">\n      <img src=\"../assets/glow-sphere.svg\" ref=\"glow\"/>\n    </div>\n    <div :class=\"`hamburger ${showNav ? `blue` : ``}`\" id=\"hamburgerMenu\">\n      <div class=\"line top\"></div>\n      <div class=\"line mid\"></div>\n      <div class=\"line bot\"></div>\n    </div>\n    <transition :key=\"hour+minute\" appear>\n            <p :class=\"`time ${showNav ? `blue` : ``}`\">\n              <TimeSun class=\"sun\" :color=\"showNav ? `#1B2227` : ``\"></TimeSun>\n              <span v-html=\"hour\"></span><span>:</span><span v-html=\"minute\"></span>\n            </p>\n          </transition>\n    <div class=\"desktop-nav\">\n      <ul>\n        <li v-for=\"(item in Math.floor($cms.nav.length / 2)\" :key=\"item\">\n          <router-link :to=\"item.link\">{{ item.text }}</router-link>\n        </li>\n        <li>\n          <div class=\"logo\">\n            <router-link to=\"/\">\n              <img src=\"../assets/IYD-White-Small.svg\"/>\n            </router-link>\n          </div>\n        </li>\n        <li v-for=\"(item, i) in $cms.nav\" :key=\"i\">\n          <router-link :to=\"item.link\">{{ item.text }}</router-link>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TimeSun from './TimeSun.vue';\nimport { gsap } from \"gsap\";\nimport { toRaw } from 'vue';\nexport default {\n  name: 'HeaderNav',\n  components: {\n    TimeSun\n  },\n  props: {\n    scrollLimit: {\n      type: Number,\n      default: 0\n    },\n    scrollPos: {\n      type: Number,\n      default: 0\n    },\n    showNav: {\n      type: Boolean,\n      default: false\n    },\n    navColor: {\n      type: String,\n      default: \"darkNav\"\n    }\n  },\n  watch: {\n    scrollPos(scrollPos) {\n      let glowSize = this.$refs.glow.getBoundingClientRect().height;\n      this.$refs.glow.style = `top: ${scrollPos * ((this.scrollBarHeight - (glowSize) / 2) / this.scrollLimit)}px`\n    },\n    showNav(showNav) {\n      if (showNav) {\n        this.hamburgerAnimate();\n      } else {\n        toRaw(this.timeline).reverse();\n      }\n    }\n  },\n  methods: {\n    getTime() {\n      this.date = new Date();\n      this.minute = this.date.getMinutes().toString().padStart(2, '0');\n      this.hour = this.date.getHours().toString();\n    },\n    hamburgerAnimate() {\n      toRaw(this.timeline).restart();\n      toRaw(this.timeline).to(\".top\", {rotation: 45, duration: 1, y: 8, borderTop: \"1px solid #1B2227\"}, 0);\n      toRaw(this.timeline).to(\".mid\", {width: 0, duration: 1, borderTop: \"1px solid #1B2227\"}, 0);\n      toRaw(this.timeline).to(\".bot\", {rotation: -45, duration: 1, y: -8, borderTop: \"1px solid #1B2227\"}, 0);\n    }\n  },\n  data() {\n    return {\n      date: new Date(),\n      scrollBarHeight: 0,\n      minute:0,\n      hour:0,\n      timeline: new gsap.timeline()\n    }\n  },\n  \n  mounted() {\n    \n    this.getTime();\n    this.scrollBarHeight = this.$refs.scrollbar.getBoundingClientRect().height;\n    let countdownTilMinuteInterval = (60 - this.date.getSeconds()) * 1000 + this.date.getMilliseconds();\n\n    setTimeout(() => {\n      this.getTime();\n      setInterval(() => {\n        this.getTime();\n      }, 60000);\n    }, countdownTilMinuteInterval)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n@import \"../styles.scss\";\n.time {\n  color: white;\n  position: fixed;\n  z-index: 10;\n  top: 20px;\n  transition: all .5s ease .5s;\n  left: 20px;\n  margin: 0;\n  // padding-left: 20px;\n  .sun {\n    display: inline-block;\n    min-width: 40px;\n    padding-right: 5px;\n    transition: all .5s ease .5s;\n  }\n}\n.blue {\n  color: #1B2227;\n  transition: all .5s ease .5s;\n  mix-blend-mode: normal !important;\n}\n.logo {\n  // position: fixed;\n  // left: 50%;\n  // left: 20px;\n  // top: 20px;\n  // transform: translateX(-50%);\n  z-index: 10;\n  // mix-blend-mode: difference;\n  img {\n    max-width: 100px;\n  }\n}\n.scrollbar {\n  position: fixed;\n  right: 30px;\n  height: 50vh;\n  border-right: 1px solid white;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 4;\n  mix-blend-mode: difference;\n  img {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    top: 0;\n  }\n}\n.hamburger {\n  @media screen and (min-width: $mobileup) {\n    display: none;\n  }\n  position: fixed;\n  right: 20px;\n  top: 30px;\n  z-index: 10;\n  cursor: pointer;\n  mix-blend-mode: difference;\n\n  img {\n    width: 30px;\n  }\n}\n\n.line {\n  pointer-events: none;\n  width: 30px;\n  height: 1px;\n  margin-bottom: 6px;\n  border-top: 1px solid white;\n}\n.desktop-nav {\n  @media screen and (max-width: $mobiledown) {\n    display: none;\n  }\n  position: fixed;\n  right: 20px;\n  top: 30px;\n  z-index: 4;\n  li {\n    cursor: pointer;\n  }\n  a {\n    color: white;\n    text-decoration: none;\n    text-transform: uppercase;\n    color: $gold;\n  }\n  \n  ul {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n    li {\n      display: inline-block;\n      padding-left: 30px;\n    }\n  }\n}\n.navDark {\n  a, span, .sun {\n    color: $darkblue;\n    &:after, &:before {\n      background: $darkblue;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}