{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.page ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"page\",\n    style: _normalizeStyle(`${$data.page.bg === `light` ? `background: #D9D9D9` : ``}`)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.page.slices, (item, i) => {\n    return _openBlock(), _createBlock(_resolveDynamicComponent(item), {\n      key: i\n    });\n  }), 128 /* KEYED_FRAGMENT */))], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;SAC0BA,UAAI,kBAA5BC,oBAEM;;IAFDC,KAAK,EAAC,MAAM;IAAcC,KAAK,qBAAKH,UAAI,CAACI,EAAE;yBAC5CH,oBAA4EI,6BAA7CL,UAAI,CAACM,MAAM,GAAvBC,IAAI,EAAEC,CAAC;yBAA1BC,aAA4EC,yBAAlBH,IAAI;MAAjBI,GAAG,EAAEH;IAAC","names":["$data","_createElementBlock","class","style","bg","_Fragment","slices","item","i","_createBlock","_resolveDynamicComponent","key"],"sourceRoot":"","sources":["/Users/rebj/Sites/staging-iyd/src/Page.vue"],"sourcesContent":["<template>\n  <div class=\"page\" v-if=\"page\" :style=\"`${page.bg === `light` ? `background: #D9D9D9` : ``}`\">\n      <component v-for=\"(item, i) in page.slices\" :key=\"i\" :is=\"item\"></component>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PagePage',\n  props: {\n  },\n  components: {\n  },\n  watch: {},\n  methods: {},\n  data() {\n    return {\n      page: null\n    }\n  },\n  mounted() {\n    console.log(this.$cms.routes.filter(i => i.path === window.location.pathname)[0].slices);\n    try {\n      this.page = this.$cms.routes.filter(i => i.path === window.location.pathname)[0];\n    } catch {\n      console.log(\"page doesn't exist\");\n    }\n  },\n  beforeUpdate() {\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n@import \"./styles.scss\";\n@import \"./fonts.scss\";\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}