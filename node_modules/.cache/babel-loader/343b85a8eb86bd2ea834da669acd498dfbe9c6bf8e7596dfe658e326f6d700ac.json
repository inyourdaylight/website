{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Transition as _Transition, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/halfsun.svg';\nimport _imports_1 from '../assets/IYD-White-Small.svg';\nimport _imports_2 from '../assets/glow-sphere.svg';\nimport _imports_3 from '../assets/hamburger.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-257c8456\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"nav\"\n};\nconst _hoisted_2 = {\n  class: \"time\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, [/*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"sun\",\n  src: _imports_0\n})], -1 /* HOISTED */));\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"logo\"\n}, [/*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1\n})])], -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"scrollbar\",\n  ref: \"scrollbar\"\n};\nconst _hoisted_8 = {\n  src: _imports_2,\n  ref: \"glow\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"hamburger\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_3,\n  id: \"hamburgerMenu\"\n})], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderNavScreen = _resolveComponent(\"HeaderNavScreen\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createBlock(_Transition, {\n    key: $data.hour + $data.minute,\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"p\", _hoisted_2, [_hoisted_3, _createElementVNode(\"span\", {\n      innerHTML: $data.hour\n    }, null, 8 /* PROPS */, _hoisted_4), _createTextVNode(\":\"), _createElementVNode(\"span\", {\n      innerHTML: $data.minute\n    }, null, 8 /* PROPS */, _hoisted_5)])]),\n    _: 1 /* STABLE */\n  })), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"img\", _hoisted_8, null, 512 /* NEED_PATCH */)], 512 /* NEED_PATCH */), _hoisted_9, _createVNode(_Transition, {\n    appear: \"\",\n    name: \"header-nav-screen\",\n    persisted: \"\"\n  }, {\n    default: _withCtx(() => [_withDirectives(_createVNode(_component_HeaderNavScreen, null, null, 512 /* NEED_PATCH */), [[_vShow, $props.showNav]])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";OAI+BA,UAA2B;OAM7CC,UAAmC;OAIrCC,UAA+B;OAG/BC,UAA6B;;;EAhBjCC,KAAK,EAAC;AAAK;;EAETA,KAAK,EAAC;AAAM;gEACbC,oBAA2D,4BAArDA,oBAA8C;EAAzCD,KAAK,EAAC,KAAK;EAACE,GAA2B,EAA3BN;;;;gEAI3BK,oBAIM;EAJDD,KAAK,EAAC;AAAM,iBACfC,oBAEI;EAFDE,IAAI,EAAC;AAAG,iBACTF,oBAA0C;EAArCC,GAAmC,EAAnCL;AAAmC;;EAGvCG,KAAK,EAAC,WAAW;EAACI,GAAG,EAAC;;;EACpBF,GAA+B,EAA/BJ,UAA+B;EAACM,GAAG,EAAC;;gEAE3CH,oBAEM;EAFDD,KAAK,EAAC;AAAW,iBACpBC,oBAAuD;EAAlDC,GAA6B,EAA7BH,UAA6B;EAACM,EAAE,EAAC;;;;;uBAhB1CC,oBAqBM,OArBNC,UAqBM,kBApBJC,aAKaC;IALAC,GAAG,EAAEC,UAAI,GAACA,YAAM;IAAEC,MAAM,EAAN;;sBAC7B,MAGI,CAHJX,oBAGI,KAHJY,UAGI,GAFFC,UAA2D,EAC3Db,oBAA2B;MAArBc,SAAa,EAALJ;IAAI,sDAAS,GAAC,uBAA6B;MAAvBI,SAAe,EAAPJ;IAAM;;OAGpDK,UAIM,EACNf,oBAEM,OAFNgB,UAEM,GADJhB,oBAAiD,OAAjDiB,UAAiD,uDAEnDC,UAEM,EACNC,aAEaX;IAFDG,MAAM,EAAN,EAAM;IAACS,IAAI,EAAC,mBAAmB;IAA3CC,SAAS,EAAT;;sBACE,MAAoD,iBAApDF,aAAoDG,yEAA3BC,cAAO","names":["_imports_0","_imports_1","_imports_2","_imports_3","class","_createElementVNode","src","href","ref","id","_createElementBlock","_hoisted_1","_createBlock","_Transition","key","$data","appear","_hoisted_2","_hoisted_3","innerHTML","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_createVNode","name","persisted","_component_HeaderNavScreen","$props"],"sourceRoot":"","sources":["/Users/rebj/Sites/inyourdaylight/src/components/HeaderNav.vue"],"sourcesContent":["<template>\n  <div class=\"nav\">\n    <transition :key=\"hour+minute\" appear>\n      <p class=\"time\">\n        <span><img class=\"sun\" src=\"../assets/halfsun.svg\"/></span>\n        <span v-html=\"hour\"></span>:<span v-html=\"minute\"></span>\n      </p>\n    </transition>\n    <div class=\"logo\">\n      <a href=\"/\">\n        <img src=\"../assets/IYD-White-Small.svg\"/>\n      </a>\n    </div>\n    <div class=\"scrollbar\" ref=\"scrollbar\">\n      <img src=\"../assets/glow-sphere.svg\" ref=\"glow\"/>\n    </div>\n    <div class=\"hamburger\">\n      <img src=\"../assets/hamburger.svg\" id=\"hamburgerMenu\"/>\n    </div>\n    <transition appear name=\"header-nav-screen\">\n      <HeaderNavScreen v-show=\"showNav\"></HeaderNavScreen>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport HeaderNavScreen from './HeaderNavScreen.vue';\n\nexport default {\n  name: 'HeaderNav',\n  components: {\n    HeaderNavScreen\n  },\n  props: {\n    scrollLimit: {\n      type: Number,\n      default: 0\n    },\n    scrollPos: {\n      type: Number,\n      default: 0\n    },\n    showNav: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    scrollPos(scrollPos) {\n      let glowSize = this.$refs.glow.getBoundingClientRect().height;\n      this.$refs.glow.style = `top: ${scrollPos * ((this.scrollBarHeight - (glowSize) / 2) / this.scrollLimit)}px`\n    },\n    // showNav(showNav) {\n    // }\n  },\n  methods: {\n    getTime() {\n      this.date = new Date();\n      this.minute = this.date.getMinutes().toString().padStart(2, '0');\n      this.hour = this.date.getHours().toString();\n    },\n  },\n  data() {\n    return {\n      date: new Date(),\n      scrollBarHeight: 0,\n      minute:0,\n      hour:0\n    }\n  },\n  \n  mounted() {\n    this.getTime();\n    this.scrollBarHeight = this.$refs.scrollbar.getBoundingClientRect().height;\n    let countdownTilMinuteInterval = (60 - this.date.getSeconds()) * 1000 + this.date.getMilliseconds();\n\n    setTimeout(() => {\n      this.getTime();\n      setInterval(() => {\n        this.getTime();\n      }, 60000);\n    }, countdownTilMinuteInterval)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n@import \"../styles.scss\";\n$\n.time {\n  color: $gold;\n  position: fixed;\n  top: 20px;\n  left: 20px;\n  .sun {\n    height: 20px;\n    padding-right: 5px;\n  }\n}\n.logo {\n  position: fixed;\n  left: 50%;\n  top: 20px;\n  transform: translateX(-50%);\n  img {\n    max-width: 100px;\n  }\n}\n.scrollbar {\n  position: fixed;\n  right: 30px;\n  height: 50vh;\n  border-right: 1px solid white;\n  top: 50%;\n  transform: translateY(-50%);\n  img {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    top: 0;\n  }\n}\n.hamburger {\n  position: fixed;\n  right: 20px;\n  top: 30px;\n  z-index: 10;\n  cursor: pointer;\n  img {\n    width: 30px;\n  }\n}\n.header-nav-screen {\n  transition: all .5s ease-in-out;\n  width: 100vw;\n}\n.header-nav-screen-enter-to, .header-nav-screen-leave-active {\n  width: 100vw;\n  transition: all .5s ease-in-out;\n}\n.header-nav-screen-enter-active, .header-nav-screen-leave-to {\n  width: 0vw;\n  transition: all .5s ease-in-out;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}