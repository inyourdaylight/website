{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, vShow as _vShow, withDirectives as _withDirectives, Transition as _Transition, openBlock as _openBlock, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/IYD-White-Small.svg';\nimport _imports_1 from '../assets/glow-sphere.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-257c8456\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"logo\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"languages\"\n}, [/*#__PURE__*/_createElementVNode(\"ul\", null, [/*#__PURE__*/_createElementVNode(\"li\", {\n  class: \"active\"\n}, \" EN \"), /*#__PURE__*/_createElementVNode(\"li\", null, \" FR \"), /*#__PURE__*/_createElementVNode(\"li\", null, \" 한국어 \"), /*#__PURE__*/_createElementVNode(\"li\", null, \" 中文 \")])], -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"scrollbar\",\n  ref: \"scrollbar\"\n};\nconst _hoisted_5 = {\n  src: _imports_1,\n  class: \"scroll-handle\",\n  ref: \"glow\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"line top\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"line mid\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"line bot\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_6, _hoisted_7, _hoisted_8];\nconst _hoisted_10 = [\"innerHTML\"];\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \":\", -1 /* HOISTED */));\nconst _hoisted_12 = [\"innerHTML\"];\nconst _hoisted_13 = {\n  class: \"desktop-nav\"\n};\nexport function render(_ctx, _cache) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_TimeSun = _resolveComponent(\"TimeSun\");\n  const _component_TimeMoon = _resolveComponent(\"TimeMoon\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(`nav ${_ctx.navColor}`),\n    id: \"nav\"\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1 /* STABLE */\n  })]), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", _hoisted_5, null, 512 /* NEED_PATCH */)], 512 /* NEED_PATCH */), _createElementVNode(\"div\", {\n    class: _normalizeClass(`hamburger ${_ctx.showNav ? `blue` : ``}`),\n    id: \"hamburgerMenu\"\n  }, _hoisted_9, 2 /* CLASS */), (_openBlock(), _createBlock(_Transition, {\n    key: _ctx.hour + _ctx.minute,\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"p\", {\n      class: _normalizeClass(`time ${_ctx.showNav ? `blue` : ``}`)\n    }, [_withDirectives(_createVNode(_component_TimeSun, {\n      class: \"sun\",\n      color: _ctx.showNav ? `#1B2227` : ``\n    }, null, 8 /* PROPS */, [\"color\"]), [[_vShow, _ctx.hour < 18]]), _withDirectives(_createVNode(_component_TimeMoon, {\n      class: \"sun\",\n      color: _ctx.showNav ? `#1B2227` : ``\n    }, null, 8 /* PROPS */, [\"color\"]), [[_vShow, _ctx.hour > 18]]), _createElementVNode(\"span\", {\n      innerHTML: _ctx.hour\n    }, null, 8 /* PROPS */, _hoisted_10), _hoisted_11, _createElementVNode(\"span\", {\n      innerHTML: _ctx.minute\n    }, null, 8 /* PROPS */, _hoisted_12)], 2 /* CLASS */)]),\n\n    _: 1 /* STABLE */\n  })), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.$cms.nav, (item, i) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: i\n    }, [_createVNode(_component_router_link, {\n      to: item.link\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(item.text), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 2 /* CLASS */);\n}","map":{"version":3,"mappings":";OAIaA,UAAmC;OAoBrCC,UAA+B;;;EAtBjCC,KAAK,EAAC;AAAM;gEAEbC,oBAA0C;EAArCC,GAAmC,EAAnCJ;AAAmC;gEAG5CG,oBAeM;EAfDD,KAAK,EAAC;AAAW,iBACpBC,oBAaK,0BAZHA,oBAEK;EAFDD,KAAK,EAAC;AAAQ,GAAC,MAEnB,gBACAC,oBAEK,YAFD,MAEJ,gBACAA,oBAEK,YAFD,OAEJ,gBACAA,oBAEK,YAFD,MAEJ;;EAGCD,KAAK,EAAC,WAAW;EAACG,GAAG,EAAC;;;EACpBD,GAA+B,EAA/BH,UAA+B;EAACC,KAAK,EAAC,eAAe;EAACG,GAAG,EAAC;;gEAG/DF,oBAA4B;EAAvBD,KAAK,EAAC;AAAU;gEACrBC,oBAA4B;EAAvBD,KAAK,EAAC;AAAU;gEACrBC,oBAA4B;EAAvBD,KAAK,EAAC;AAAU;oBAFrBI,UAA4B,EAC5BC,UAA4B,EAC5BC,UAA4B;;iEAMOL,oBAAc,cAAR,GAAC;;;EAGvCD,KAAK,EAAC;AAAa;;;;;uBArC1BO,oBA4CM;IA5CAP,KAAK,yBAASQ,aAAQ;IAAIC,EAAE,EAAC;MACjCR,oBAIM,OAJNS,UAIM,GAHJC,aAEcC;IAFDC,EAAE,EAAC;EAAG;sBACjB,MAA0C,CAA1CC,UAA0C;;QAG9CC,UAeM,EACNd,oBAEM,OAFNe,UAEM,GADJf,oBAAuE,OAAvEgB,UAAuE,uDAEzEhB,oBAIM;IAJAD,KAAK,+BAAeQ,YAAO;IAAkBC,EAAE,EAAC;gDAKtDS,aAMmBC;IANNC,GAAG,EAAEZ,SAAI,GAACA,WAAM;IAAEa,MAAM,EAAN;;sBACvB,MAII,CAJJpB,oBAII;MAJAD,KAAK,0BAAUQ,YAAO;wBACxBG,aAAoFW;MAA3EtB,KAAK,EAAC,KAAK;MAAqBuB,KAAK,EAAEf,YAAO;kDAA1BA,SAAI,0BACjCG,aAAsFa;MAA5ExB,KAAK,EAAC,KAAK;MAAqBuB,KAAK,EAAEf,YAAO;kDAA1BA,SAAI,UAClCP,oBAA2B;MAArBwB,SAAa,EAALjB;IAAI,sCAASkB,WAAc,sBAA6B;MAAvBD,SAAe,EAAPjB;IAAM;;;OAGvEP,oBAMM,OANN0B,WAMM,GALJ1B,oBAIK,gCAHHM,oBAEKqB,6BAFmBpB,SAAI,CAACqB,GAAG,GAApBC,IAAI,EAAEC,CAAC;yBAAnBxB,oBAEK;MAF8Ba,GAAG,EAAEW;IAAC,IACvCpB,aAA0DC;MAA5CC,EAAE,EAAEiB,IAAI,CAACE;;wBAAM,MAAe,mCAAZF,IAAI,CAACG,IAAI","names":["_imports_0","_imports_1","class","_createElementVNode","src","ref","_hoisted_6","_hoisted_7","_hoisted_8","_createElementBlock","_ctx","id","_hoisted_1","_createVNode","_component_router_link","to","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createBlock","_Transition","key","appear","_component_TimeSun","color","_component_TimeMoon","innerHTML","_hoisted_11","_hoisted_13","_Fragment","nav","item","i","link","text"],"sourceRoot":"","sources":["/Users/rebj/Sites/staging-iyd/src/components/HeaderNav.vue"],"sourcesContent":["<template>\n  <div :class=\"`nav ${navColor}`\" id=\"nav\">\n    <div class=\"logo\">\n      <router-link to=\"/\">\n        <img src=\"../assets/IYD-White-Small.svg\"/>\n      </router-link>\n    </div>\n    <div class=\"languages\">\n      <ul>\n        <li class=\"active\">\n          EN\n        </li>\n        <li>\n          FR\n        </li>\n        <li>\n          한국어\n        </li>\n        <li>\n          中文\n        </li>\n      </ul>\n    </div>\n    <div class=\"scrollbar\" ref=\"scrollbar\">\n      <img src=\"../assets/glow-sphere.svg\" class=\"scroll-handle\" ref=\"glow\"/>\n    </div>\n    <div :class=\"`hamburger ${showNav ? `blue` : ``}`\" id=\"hamburgerMenu\">\n      <div class=\"line top\"></div>\n      <div class=\"line mid\"></div>\n      <div class=\"line bot\"></div>\n    </div>\n    <transition :key=\"hour+minute\" appear>\n            <p :class=\"`time ${showNav ? `blue` : ``}`\">\n              <TimeSun class=\"sun\" v-show=\"hour < 18\" :color=\"showNav ? `#1B2227` : ``\"></TimeSun>\n              <TimeMoon class=\"sun\" v-show=\"hour > 18\" :color=\"showNav ? `#1B2227` : ``\"></TimeMoon>\n              <span v-html=\"hour\"></span><span>:</span><span v-html=\"minute\"></span>\n            </p>\n          </transition>\n    <div class=\"desktop-nav\">\n      <ul>\n        <li v-for=\"(item, i) in $cms.nav\" :key=\"i\">\n          <router-link :to=\"item.link\">{{ item.text }}</router-link>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TimeSun from './TimeSun.vue';\nimport { gsap } from \"gsap\";\nimport { toRaw } from 'vue';\nexport default {\n  name: 'HeaderNav',\n  components: {\n    TimeSun\n  },\n  props: {\n    scrollLimit: {\n      type: Number,\n      default: 0\n    },\n    scrollPos: {\n      type: Number,\n      default: 0\n    },\n    showNav: {\n      type: Boolean,\n      default: false\n    },\n    navColor: {\n      type: String,\n      default: \"darkNav\"\n    },\n    clickEvents: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  watch: {\n    scrollPos(scrollPos) {\n      let glowSize = this.$refs.glow.getBoundingClientRect().height;\n      this.$refs.glow.style = `top: ${scrollPos * ((this.scrollBarHeight - (glowSize) / 2) / this.scrollLimit)}px`\n    },\n    clickEvents(e) {\n      this.scroller(e);\n    },\n    showNav(showNav) {\n      if (showNav) {\n        this.hamburgerAnimate();\n      } else {\n        toRaw(this.timeline).reverse();\n      }\n    }\n  },\n  methods: {\n    scroller(e) {\n      if (e.target.className === \"scroll-handle\") {\n         window.addEventListener(\"mousemove\", this.scrollDrag);\n         window.addEventListener(\"mouseup\", this.removeScrollDrag);\n      }\n    },\n    scrollDrag(e) {\n      let scrollbar = this.$refs.scrollbar.getBoundingClientRect().top;\n      let scrollbar = this.$refs.scrollbar.getBoundingClientRect().top;\n      let move = e.clientY - scrollbar;\n      this.$refs.glow.style = `transform: translateY(${move}px) translateX(-50%);`;\n    },\n    removeScrollDrag() {\n      window.removeEventListener(\"mousemove\", this.scrollDrag);\n    },\n    getTime() {\n      this.date = new Date();\n      this.minute = this.date.getMinutes().toString().padStart(2, '0');\n      this.hour = this.date.getHours().toString();\n    },\n    hamburgerAnimate() {\n      toRaw(this.timeline).restart();\n      toRaw(this.timeline).to(\".top\", {rotation: 45, duration: 1, y: 8, borderTop: \"1px solid #1B2227\"}, 0);\n      toRaw(this.timeline).to(\".mid\", {width: 0, duration: 1, borderTop: \"1px solid #1B2227\"}, 0);\n      toRaw(this.timeline).to(\".bot\", {rotation: -45, duration: 1, y: -8, borderTop: \"1px solid #1B2227\"}, 0);\n    }\n  },\n  data() {\n    return {\n      date: new Date(),\n      scrollBarHeight: 0,\n      minute:0,\n      hour:0,\n      timeline: new gsap.timeline()\n    }\n  },\n  \n  mounted() {\n    \n    this.getTime();\n    this.scrollBarHeight = this.$refs.scrollbar.getBoundingClientRect().height;\n    let countdownTilMinuteInterval = (60 - this.date.getSeconds()) * 1000 + this.date.getMilliseconds();\n\n    setTimeout(() => {\n      this.getTime();\n      setInterval(() => {\n        this.getTime();\n      }, 60000);\n    }, countdownTilMinuteInterval)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n@import \"../styles.scss\";\n.time {\n  color: white;\n  position: fixed;\n  z-index: 10;\n  top: 20px;\n  transition: all .5s ease .5s;\n  left: 20px;\n  margin: 0;\n  // padding-left: 20px;\n  .sun {\n    display: inline-block;\n    min-width: 40px;\n    padding-right: 5px;\n    transition: all .5s ease .5s;\n  }\n}\n.blue {\n  color: #1B2227;\n  transition: all .5s ease .5s;\n  mix-blend-mode: normal !important;\n}\n.logo {\n  position: fixed;\n  // left: 50%;\n  left: 140px;\n  top: 20px;\n  // transform: translateX(-50%);\n  z-index: 10;\n  // mix-blend-mode: difference;\n  img {\n    max-width: 130px;\n  }\n}\n.scrollbar {\n  position: fixed;\n  right: 30px;\n  height: 50vh;\n  border-right: 1px solid white;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 4;\n  mix-blend-mode: difference;\n  img {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    top: 0;\n    cursor: pointer;\n  }\n}\n.hamburger {\n  @media screen and (min-width: $mobileup) {\n    display: none;\n  }\n  position: fixed;\n  right: 20px;\n  top: 30px;\n  z-index: 10;\n  cursor: pointer;\n  mix-blend-mode: difference;\n\n  img {\n    width: 30px;\n  }\n}\n\n.line {\n  pointer-events: none;\n  width: 30px;\n  height: 1px;\n  margin-bottom: 6px;\n  border-top: 1px solid white;\n}\n.desktop-nav {\n  @media screen and (max-width: $mobiledown) {\n    display: none;\n  }\n  position: fixed;\n  right: 20px;\n  top: 30px;\n  z-index: 4;\n  li {\n    cursor: pointer;\n  }\n  a {\n    color: white;\n    text-decoration: none;\n    text-transform: uppercase;\n    color: $gold;\n  }\n  \n  ul {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n    li {\n      display: inline-block;\n      padding-left: 30px;\n    }\n  }\n}\n.navDark {\n  a, span, .sun {\n    color: $darkblue;\n    &:after, &:before {\n      background: $darkblue;\n    }\n  }\n}\n.languages {\n  position: fixed;\n  left: 20px;\n  top: 50vh;\n  transform: translateY(-50%);\n  ul {\n    list-style: none;\n    padding: 0;\n    line-height: 1.5;\n  }\n  .active {\n    color: $gold;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}