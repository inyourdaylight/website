{"ast":null,"code":"import { gsap } from \"gsap\";\nimport { Linear } from \"gsap\";\nexport default {\n  name: 'CarouselText',\n  props: {},\n  watch: {\n    titleCount: {\n      handler() {\n        setTimeout(() => {\n          this.animatedTitle();\n        }, 100);\n      }\n    }\n  },\n  methods: {\n    animatedTitle() {\n      this.rowWidth = this.$refs.row.getBoundingClientRect().width;\n      gsap.to(\".row2\", {\n        x: this.rowWidth,\n        duration: 0,\n        ease: Linear.easeNone\n      }, 0);\n      gsap.to(\".row1\", {\n        x: -(this.rowWidth - window.innerWidth + window.innerWidth),\n        duration: 20,\n        ease: Linear.easeNone\n      }, 0);\n      this.timeline.to(\".row2\", {\n        x: 0,\n        duration: 20,\n        ease: Linear.easeNone\n      }, 0);\n      this.timeline.repeat();\n    }\n  },\n  data() {\n    return {\n      languages: ['한국어', '中文', 'Français', 'English'],\n      rowWidth: 0,\n      timeline: new gsap.timeline({\n        repeat: -1\n      }),\n      titleCount: 1\n    };\n  },\n  mounted() {\n    // this.$nextTick(() => {\n    //     this.titleCount = Math.ceil(window.innerWidth / this.$refs.row.getBoundingClientRect().width);\n    // })\n    this.animatedTitle();\n  }\n};","map":{"version":3,"mappings":"AAsBA,SAASA,IAAG,QAAS,MAAM;AAC3B,SAASC,MAAK,QAAS,MAAM;AAC7B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,CACP,CAAC;EACDC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,OAAO,GAAG;QACRC,UAAU,CAAC,MAAM;UACf,IAAI,CAACC,aAAa,EAAE;QACtB,CAAC,EAAE,GAAG,CAAC;MACT;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPD,aAAa,GAAG;MACd,IAAI,CAACE,QAAO,GAAI,IAAI,CAACC,KAAK,CAACC,GAAG,CAACC,qBAAqB,EAAE,CAACC,KAAK;MAC5Dd,IAAI,CAACe,EAAE,CAAC,OAAO,EAAE;QAACC,CAAC,EAAE,IAAI,CAACN,QAAQ;QAAGO,QAAQ,EAAE,CAAC;QAAEC,IAAI,EAACjB,MAAM,CAACkB;MAAQ,CAAC,EAAE,CAAC,CAAC;MAC3EnB,IAAI,CAACe,EAAE,CAAC,OAAO,EAAE;QAACC,CAAC,EAAE,EAAG,IAAI,CAACN,QAAO,GAAIU,MAAM,CAACC,UAAU,GAAID,MAAM,CAACC,UAAU,CAAC;QAAGJ,QAAQ,EAAE,EAAE;QAAEC,IAAI,EAACjB,MAAM,CAACkB;MAAS,CAAC,EAAE,CAAC,CAAC;MAC1H,IAAI,CAACG,QAAQ,CAACP,EAAE,CAAC,OAAO,EAAE;QAACC,CAAC,EAAE,CAAC;QAAGC,QAAQ,EAAE,EAAE;QAAEC,IAAI,EAACjB,MAAM,CAACkB;MAAS,CAAC,EAAE,CAAC,CAAC;MAC1E,IAAI,CAACG,QAAQ,CAACC,MAAM,EAAE;IAExB;EACF,CAAC;EACDC,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,CACT,KAAK,EACL,IAAI,EACJ,UAAU,EACV,SAAQ,CACT;MACDf,QAAQ,EAAC,CAAC;MACVY,QAAQ,EAAE,IAAItB,IAAI,CAACsB,QAAQ,CAAC;QAACC,MAAM,EAAE,CAAC;MAAC,CAAC,CAAC;MACzClB,UAAU,EAAC;IACb;EACF,CAAC;EACDqB,OAAO,GAAG;IACR;IACA;IACA;IACA,IAAI,CAAClB,aAAa,EAAE;EACtB;AACF","names":["gsap","Linear","name","props","watch","titleCount","handler","setTimeout","animatedTitle","methods","rowWidth","$refs","row","getBoundingClientRect","width","to","x","duration","ease","easeNone","window","innerWidth","timeline","repeat","data","languages","mounted"],"sourceRoot":"","sources":["/Users/rebj/Sites/inyourdaylight/src/components/CarouselText.vue"],"sourcesContent":["<template>\n  <div class=\"carousel-text\">\n    <img class=\"sun\" src=\"../assets/Sun-animated.svg\"/>\n    <div class=\"test\">TEST</div>\n    <transition appear name=\"carousel\">\n        <h2 ref=\"title\" class=\"title\" v-if=\"languages\">\n            <span class=\"row1\" ref=\"row\">\n              <transition-group v-for=\"(item, i) in titleCount\" :key=\"i\">\n                <span v-for=\"(lang, j) in languages\" :key=\"j\">{{ lang }}</span>\n            </transition-group>\n          </span>\n          <span class=\"row2\">\n              <transition-group v-for=\"(item, i) in titleCount\" :key=\"i\">\n                <span v-for=\"(lang, j) in languages\" :key=\"j\">{{ lang }}</span>\n             </transition-group>\n          </span>\n        </h2>\n      </transition>\n  </div>\n</template>\n\n<script>\nimport { gsap } from \"gsap\";\nimport { Linear } from \"gsap\";\nexport default {\n  name: 'CarouselText',\n  props: {\n  },\n  watch: {\n    titleCount: {\n      handler() {\n        setTimeout(() => {\n          this.animatedTitle();\n        }, 100);\n      }\n    },\n  },\n  methods: {\n    animatedTitle() {\n      this.rowWidth = this.$refs.row.getBoundingClientRect().width;\n      gsap.to(\".row2\", {x: this.rowWidth,  duration: 0, ease:Linear.easeNone}, 0);\n      gsap.to(\".row1\", {x: -((this.rowWidth - window.innerWidth) + window.innerWidth),  duration: 20, ease:Linear.easeNone }, 0);\n      this.timeline.to(\".row2\", {x: 0,  duration: 20, ease:Linear.easeNone }, 0);\n      this.timeline.repeat();\n        \n    }\n  },\n  data() {\n    return {\n      languages: [\n        '한국어',\n        '中文',\n        'Français',\n        'English'\n      ],\n      rowWidth:0,\n      timeline: new gsap.timeline({repeat: -1}),\n      titleCount:1,\n    }\n  },\n  mounted() {\n    // this.$nextTick(() => {\n    //     this.titleCount = Math.ceil(window.innerWidth / this.$refs.row.getBoundingClientRect().width);\n    // })\n    this.animatedTitle();\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n@import \"../styles.scss\";\n.sun {\n    max-height: 100vh;\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    z-index: 0;\n}\n.carousel-text {\n    height: 100vh;\n    position: relative;\n    overflow: hidden;\n}\n.carousel-enter-active {\n  transition: all 1s ease;\n  opacity: 1;\n}\n.carousel-enter {\n  opacity: 0;\n}\nh2 {\n    font-family: \"Joane Bold\";\n    text-transform: uppercase;\n    font-size: 60px;\n    transform: translateY(-50%);\n    margin: 0;\n    position: absolute;\n    white-space:nowrap;\n    z-index: 0;\n    top: 50vh;\n    span:not(.row1, .row2) {\n    display: inline-block;\n    padding-right: 20px;\n  }\n  .row1, .row2 {\n    position: absolute;\n    left: 0;\n    transform: translateY(-50%);\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}