{"ast":null,"code":"import { toRaw } from 'vue';\nimport { gsap } from \"gsap\";\nimport { Linear } from \"gsap\";\nexport default {\n  name: 'CarouselText',\n  props: {\n    clickEvents: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  watch: {\n    titleCount: {\n      handler() {\n        this.$nextTick(() => {\n          this.animatedTitle();\n        });\n      }\n    }\n  },\n  methods: {\n    animatedTitle() {\n      this.rowWidth = this.$refs.row.getBoundingClientRect().width;\n      toRaw(this.timeline).to(\".row2\", {\n        x: this.rowWidth,\n        duration: 0,\n        ease: Linear.easeNone\n      }, 0);\n      toRaw(this.timeline).to(\".row1\", {\n        x: -(this.rowWidth - window.innerWidth + window.innerWidth),\n        duration: this.duration,\n        ease: Linear.easeNone\n      }, 0);\n      toRaw(this.timeline).to(\".row2\", {\n        x: 0,\n        duration: this.duration,\n        ease: Linear.easeNone\n      }, 0);\n      toRaw(this.timeline).repeat();\n    }\n  },\n  data() {\n    return {\n      // text: [\n      //   '한국어',\n      //   '中文',\n      //   'Français',\n      //   'English'\n      // ],\n      text: `한국어 &nbsp;&nbsp; 中文 &nbsp;&nbsp; Français &nbsp;&nbsp; English &nbsp;`,\n      rowWidth: 0,\n      timeline: new gsap.timeline({\n        repeat: -1\n      }),\n      titleCount: 2,\n      duration: 30\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.titleCount = Math.ceil(window.innerWidth / this.$refs.row.getBoundingClientRect().width);\n    });\n    // this.animatedTitle();\n  }\n};","map":{"version":3,"mappings":"AAyBA,SAASA,KAAI,QAAS,KAAK;AAC3B,SAASC,IAAG,QAAS,MAAM;AAC3B,SAASC,MAAK,QAAS,MAAM;AAC7B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,MAAM,CAAC;IAClB;EACF,CAAC;EACDC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,OAAO,GAAG;QACR,IAAI,CAACC,SAAS,CAAC,MAAM;UACnB,IAAI,CAACC,aAAa,EAAE;QACtB,CAAC;MACH;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPD,aAAa,GAAG;MACd,IAAI,CAACE,QAAO,GAAI,IAAI,CAACC,KAAK,CAACC,GAAG,CAACC,qBAAqB,EAAE,CAACC,KAAK;MAC5DnB,KAAK,CAAC,IAAI,CAACoB,QAAQ,CAAC,CAACC,EAAE,CAAC,OAAO,EAAE;QAACC,CAAC,EAAE,IAAI,CAACP,QAAQ;QAAGQ,QAAQ,EAAE,CAAC;QAAEC,IAAI,EAACtB,MAAM,CAACuB;MAAQ,CAAC,EAAE,CAAC,CAAC;MAC3FzB,KAAK,CAAC,IAAI,CAACoB,QAAQ,CAAC,CAACC,EAAE,CAAC,OAAO,EAAE;QAACC,CAAC,EAAE,EAAG,IAAI,CAACP,QAAO,GAAIW,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACC,UAAU;QAAKJ,QAAQ,EAAE,IAAI,CAACA,QAAQ;QAAEC,IAAI,EAACtB,MAAM,CAACuB;MAAS,CAAC,EAAE,CAAC,CAAC;MACrJzB,KAAK,CAAC,IAAI,CAACoB,QAAQ,CAAC,CAACC,EAAE,CAAC,OAAO,EAAE;QAACC,CAAC,EAAE,CAAC;QAAGC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QAAEC,IAAI,EAACtB,MAAM,CAACuB;MAAS,CAAC,EAAE,CAAC,CAAC;MAC5FzB,KAAK,CAAC,IAAI,CAACoB,QAAQ,CAAC,CAACQ,MAAM,EAAE;IAE/B;EACF,CAAC;EACDC,IAAI,GAAG;IACL,OAAO;MACL;MACA;MACA;MACA;MACA;MACA;MACAC,IAAI,EAAG,uEAAsE;MAC7Ef,QAAQ,EAAC,CAAC;MACVK,QAAQ,EAAE,IAAInB,IAAI,CAACmB,QAAQ,CAAC;QAACQ,MAAM,EAAE,CAAC;MAAC,CAAC,CAAC;MACzClB,UAAU,EAAC,CAAC;MACZa,QAAQ,EAAE;IACZ;EACF,CAAC;EACDQ,OAAO,GAAG;IACR,IAAI,CAACnB,SAAS,CAAC,MAAM;MACjB,IAAI,CAACF,UAAS,GAAIsB,IAAI,CAACC,IAAI,CAACP,MAAM,CAACC,UAAS,GAAI,IAAI,CAACX,KAAK,CAACC,GAAG,CAACC,qBAAqB,EAAE,CAACC,KAAK,CAAC;IACjG,CAAC;IACD;EACF;AACF","names":["toRaw","gsap","Linear","name","props","clickEvents","type","Object","default","watch","titleCount","handler","$nextTick","animatedTitle","methods","rowWidth","$refs","row","getBoundingClientRect","width","timeline","to","x","duration","ease","easeNone","window","innerWidth","repeat","data","text","mounted","Math","ceil"],"sourceRoot":"","sources":["/Users/rebj/Sites/staging-iyd/src/components/CarouselText.vue"],"sourcesContent":["<template>\n  <div class=\"carousel-text\">\n    <!-- <img class=\"sun\" src=\"../assets/Sun-animated.svg\"/> -->\n        <div class=\"text-content\">\n            <h2 ref=\"title\" class=\"text\" v-if=\"text\">\n                <span class=\"pre animate-fade-in\">We Speak</span>\n                <div class=\"carousel-container animate-fade-in\">\n                    <span class=\"row1\" ref=\"row\">\n                      <transition-group v-for=\"(item, i) in titleCount + 1\" :key=\"i\">\n                        <span :key=\"i+''\" v-html=\"text\"></span>\n                        </transition-group>\n                    </span>\n                    <span class=\"row2\">\n                      <transition-group v-for=\"(item, i) in titleCount + 1\" :key=\"i\">\n                        <span :key=\"i+''\" v-html=\"text\"></span>\n                      </transition-group>\n                    </span>\n                </div>\n            </h2>\n            <!-- <p class=\"blurb animate-fade-in animate-delay-250\">Overall, your brand or company's goal is to make higher revenue or to scale up. But before you do it, you should check if you are customer-centric..</p> -->\n        </div>\n  </div>\n</template>\n\n<script>\nimport { toRaw } from 'vue';\nimport { gsap } from \"gsap\";\nimport { Linear } from \"gsap\";\nexport default {\n  name: 'CarouselText',\n  props: {\n    clickEvents: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  watch: {\n    titleCount: {\n      handler() {\n        this.$nextTick(() => {\n          this.animatedTitle();\n        })\n      }\n    },\n  },\n  methods: {\n    animatedTitle() {\n      this.rowWidth = this.$refs.row.getBoundingClientRect().width;\n      toRaw(this.timeline).to(\".row2\", {x: this.rowWidth,  duration: 0, ease:Linear.easeNone}, 0);\n      toRaw(this.timeline).to(\".row1\", {x: -((this.rowWidth - window.innerWidth)+ window.innerWidth) ,  duration: this.duration, ease:Linear.easeNone }, 0);\n      toRaw(this.timeline).to(\".row2\", {x: 0,  duration: this.duration, ease:Linear.easeNone }, 0);\n      toRaw(this.timeline).repeat();\n        \n    }\n  },\n  data() {\n    return {\n      // text: [\n      //   '한국어',\n      //   '中文',\n      //   'Français',\n      //   'English'\n      // ],\n      text: `한국어 &nbsp;&nbsp; 中文 &nbsp;&nbsp; Français &nbsp;&nbsp; English &nbsp;`,\n      rowWidth:0,\n      timeline: new gsap.timeline({repeat: -1}),\n      titleCount:2,\n      duration: 30\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n        this.titleCount = Math.ceil(window.innerWidth / this.$refs.row.getBoundingClientRect().width);\n    })\n    // this.animatedTitle();\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n@import \"../styles.scss\";\n.sun {\n    max-height: 100vh;\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    z-index: 0;\n}\n.carousel-text {\n    height: 60vh;\n    position: relative;\n    overflow: hidden;\n}\n.carousel-enter-active {\n  transition: all 1s ease;\n  opacity: 1;\n}\n.carousel-enter {\n  opacity: 0;\n}\n.text {\n    width: 100vw;\n    // transform: translateY(-50%);\n    margin: 0;\n    // position: absolute;\n    z-index: 0;\n    top: 50vh;\n    text-align: center;\n    span:not(.row1, .row2, .pre) {\n        display: inline-block;\n        padding-right: 20px;\n    }\n  .row1, .row2 {\n    position: absolute;\n    left: 0;\n    transform: translateY(-50%);\n    color: $gold;\n    // text-transform: uppercase;\n    font-size: 60px;\n    font-family: $heading;\n    white-space:nowrap;\n    top: 50%;\n  }\n}\n.pre {\n    color: white;\n    // transform: translateY(-100%);\n    display: block;\n    font-size: 30px;\n}\n.carousel-container {\n    position: relative;\n    height: 100px;\n}\n.blurb {\n    text-align: center;\n    max-width: 600px;\n    width: calc(100% - 40px);\n    margin: auto;\n    padding-top: 40px;\n    text-shadow: 0px 0px 20px #1B2227;\n}\n.text-content {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    padding: 40px 0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}