{"ast":null,"code":"import industries from \"../industries.js\";\nexport default {\n  name: 'CDAPApplication',\n  props: {\n    clickEvents: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  watch: {\n    clickEvents: {\n      handler(clickEvent) {\n        console.log(clickEvent.target.className);\n        switch (clickEvent.target.className) {\n          case \"dropdown closed\":\n            {\n              clickEvent.target.getElementsByClassName(\"selection\")[0].style.maxHeight = '400px';\n              clickEvent.target.className = \"dropdown open\";\n              clickEvent.target.getElementsByClassName(\"arrow\")[0].className = \"arrow up\";\n              break;\n            }\n          case \"dropdown open\":\n            {\n              clickEvent.target.getElementsByClassName(\"selection\")[0].style.maxHeight = '0px';\n              clickEvent.target.className = \"dropdown closed\";\n              clickEvent.target.getElementsByClassName(\"arrow\")[0].className = \"arrow\";\n              break;\n            }\n          case \"option industry\":\n            {\n              clickEvent.target.parentElement.style.maxHeight = '0px';\n              clickEvent.target.parentElement.parentElement.className = \"dropdown closed\";\n              this.activeIndustry = clickEvent.target.innerHTML;\n              break;\n            }\n        }\n      }\n    }\n  },\n  methods: {\n    doIndustrySearch(e) {\n      // Show dropdown\n      e.target.parentElement.parentElement.getElementsByClassName(\"selection\")[0].style.maxHeight = '400px';\n      e.target.parentElement.className = \"dropdown open\";\n      // Current value is what user is typing in\n      this.activeIndustry = e.target.value;\n      // If not results found, display that in the dropdown\n      if ([...industries.list].filter(i => i.includes(e.target.value)).length === 0) {\n        this.industries = {\n          list: ['No results found.']\n        };\n        return;\n      }\n      this.industries = {\n        list: [...industries.list].filter(i => i.includes(this.activeIndustry))\n      };\n    },\n    handleChange(clickEvent) {\n      console.log(clickEvent.target.parentElement);\n      if ([...industries.list].indexOf(this.activeIndustry) < 0) {\n        this.activeIndustry = null;\n        this.industries = industries;\n      }\n      clickEvent.target.parentElement.getElementsByClassName(\"selection\")[0].style.maxHeight = '0px';\n      clickEvent.target.parentElement.className = \"dropdown closed\";\n    }\n  },\n  data() {\n    return {\n      industries: industries,\n      activeIndustry: null\n    };\n  },\n  mounted() {\n    this.activeIndustry = this.industries.list[0];\n  }\n};","map":{"version":3,"mappings":"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","names":["industries","name","props","clickEvents","type","Object","default","watch","handler","clickEvent","console","log","target","className","getElementsByClassName","style","maxHeight","parentElement","activeIndustry","innerHTML","methods","doIndustrySearch","e","value","list","filter","i","includes","length","handleChange","indexOf","data","mounted"],"sourceRoot":"","sources":["/Users/rebj/Sites/staging-iyd/src/components/CDAPApplication.vue"],"sourcesContent":["<template>\n  <div class=\"cdap-application\">\n   <div class=\"text\">\n        <h1>CDAP Application</h1>\n        <p>Feel free to fill out the application, to see if you are eligible for the CDAP Program!</p>\n   </div>\n   <div class=\"application-form\">\n    <form>\n        <div class=\"row\">\n            <label for=\"name\"><p>Name</p></label>\n            <input ref=\"name\" required placeholder=\"eg. John Smith\"/>\n        </div>\n        <div class=\"row\">\n            <label for=\"company-name\"><p>Company Name</p></label>\n            <input ref=\"company-name\" required placeholder=\"eg. In Your Daylight\"/>\n        </div>\n        <div class=\"row\">\n            <label for=\"business\"><p>Business Industry</p></label>\n            <div name=\"business\" class=\"dropdown closed\">\n                <input required \n                :value=\"activeIndustry\" \n                class=\"input\" \n                @input=\"doIndustrySearch\" \n                @change=\"handleChange\" \n                placeholder=\"Please select your occupational field.\"/>\n                    <div class=\"arrow\">▼</div>\n                    <div class=\"selection\">\n                        <p class=\"option industry\" v-for=\"(item, i) in industries.list\" :key=\"i\">{{ item }}</p>\n                    </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <label for=\"phone\"><p>Phone Number</p></label>\n            <input ref=\"phone\" required placeholder=\"eg: 9051234567\"/>\n        </div>\n        <div class=\"row\">\n            <label for=\"email\"><p>Email Address</p></label>\n            <input ref=\"email\" required placeholder=\"eg. johnsmith@email.com\"/>\n        </div>\n        <div class=\"row\">\n            <label for=\"app\"><p>Have you previously started a CDAP application?</p></label>\n            <div name=\"app\" class=\"dropdown closed\">\n                <div class=\"input\">No</div>\n                <div class=\"arrow\">▼</div>\n                <div class=\"selection\">\n                    <p class=\"option\">No</p>\n                    <p class=\"option\">Yes</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <label for=\"refer\"><p>Who Referred You?</p></label>\n            <input ref=\"refer\" required placeholder=\"eg. Some Company Inc.\"/>\n        </div>\n        <div class=\"row\">\n            <input type=\"submit\" class=\"submit cta\"/>\n        </div>\n    </form>\n   </div>\n  </div>\n</template>\n\n<script>\nimport industries from \"../industries.js\";\n\nexport default {\n  name: 'CDAPApplication',\n  props: {\n    clickEvents: {\n        type: Object,\n        default: () => {}\n    }\n  },\n  watch: {\n    clickEvents: {\n        handler(clickEvent) {\n            console.log(clickEvent.target.className);\n            switch(clickEvent.target.className) {\n                case \"dropdown closed\": {\n                    clickEvent.target.getElementsByClassName(\"selection\")[0].style.maxHeight = '400px';\n                    clickEvent.target.className = \"dropdown open\";\n                    clickEvent.target.getElementsByClassName(\"arrow\")[0].className = \"arrow up\";\n                    break;\n                }\n                case \"dropdown open\": {\n                    clickEvent.target.getElementsByClassName(\"selection\")[0].style.maxHeight = '0px';\n                    clickEvent.target.className = \"dropdown closed\";\n                    clickEvent.target.getElementsByClassName(\"arrow\")[0].className = \"arrow\";\n                    break;\n                }\n                case \"option industry\": {\n                    clickEvent.target.parentElement.style.maxHeight = '0px';\n                    clickEvent.target.parentElement.parentElement.className = \"dropdown closed\";\n                    this.activeIndustry = clickEvent.target.innerHTML;\n                    break;\n                }\n            }\n            \n        }\n    }\n  },\n  methods: {\n    doIndustrySearch(e) {\n        // Show dropdown\n        e.target.parentElement.parentElement.getElementsByClassName(\"selection\")[0].style.maxHeight = '400px';\n        e.target.parentElement.className = \"dropdown open\";\n        // Current value is what user is typing in\n        this.activeIndustry = e.target.value;\n        // If not results found, display that in the dropdown\n        if ([...industries.list].filter(i => i.includes(e.target.value)).length === 0) {\n            this.industries = {\n                list: ['No results found.']\n            };\n            return;\n        }\n        this.industries = {\n            list: [...industries.list].filter(i => i.includes(this.activeIndustry))\n        };\n    },\n    handleChange(clickEvent) {\n        console.log(clickEvent.target.parentElement);\n        if ([...industries.list].indexOf(this.activeIndustry) < 0) {\n            this.activeIndustry = null;\n            this.industries = industries;\n        }\n        clickEvent.target.parentElement.getElementsByClassName(\"selection\")[0].style.maxHeight = '0px';\n        clickEvent.target.parentElement.className = \"dropdown closed\";\n    }\n  },\n  data() {\n    return {\n        industries: industries,\n        activeIndustry: null\n    }\n  },\n  mounted() {\n    this.activeIndustry = this.industries.list[0];\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n@import \"../styles.scss\";\n.cdap-application {\n    padding: 20px;\n}\n.text {\n    text-align: center;\n}\n.application-form {\n    // background: $lightgrey;\n    border: 1px solid $gold;\n    max-width: 600px;\n    margin: 40px auto auto;\n    padding: 40px;\n    border-radius: 20px;\n    input:not(.submit) {\n        outline: none;\n        border: none;\n        padding: 10px 0 0;\n        display: inline-block;\n        vertical-align: middle;\n        width: calc(75% - 10px);\n        background: none;\n        border-bottom: 1px solid white;\n        color: white;\n        padding-bottom: 5px;\n    }\n\n    .submit {\n        background: white;\n        color: $darkblue;\n        font-weight: 700;\n        font-size: 20px;\n    }\n\n    p {\n        margin-bottom: 0;\n    }\n    .row:not(:last-child) {\n        margin-bottom: 30px;\n    }\n    .row:last-child {\n        text-align: center;\n        margin-top: 40px;\n    }\n    h3 {\n            margin: 0;\n        }\n    label {\n        display: inline-block;\n        vertical-align: middle;\n        width: calc(25% - 20px);\n        padding-right: 10px;\n        color: white;\n    }\n    .dropdown {\n        cursor: pointer;\n        // background: lightblue;\n         -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        padding: 5px;\n        border: none;\n        border-radius: 10px;\n        width: calc(75% - 10px);\n        display: inline-block;\n        background: white;\n        position: relative;\n        input {\n            color: $darkblue;\n            padding: 5px;\n            border-radius: 10px;\n            transition: all .5s ease;\n            color: $darkblue;\n            font-size: 14px;\n            \n            &:focus,  &:hover {\n                background: lightgrey;\n                transition: all .5s ease;\n            }\n        }\n        .input {\n            padding: 0;\n            color: $darkblue;\n            padding: 5px;\n            border-radius: 10px;\n            transition: all .5s ease;\n            color: $darkblue;\n            font-size: 14px;\n        }\n        p {\n            color: $darkblue;\n            font-size: 14px;\n        }\n        .arrow {\n            position: absolute;\n            right: 10px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: black;\n            pointer-events: none;\n            transition: all .25s ease;\n        }\n        .up {\n            transition: all .25s ease;\n            transform: translateY(-50%) rotate(180deg);\n        }\n        .selection {\n            position: absolute;\n            background: lightgrey;\n            width: calc(100% - 20px);\n            left: 0;\n            z-index: 3;\n            max-height: 0px;\n            overflow-y: scroll;\n            transition: all 1s ease;\n            p {\n                transition: all .25s ease;\n                padding: 5px 10px;\n                &:hover {\n                    background: white;\n                    transition: all .25s ease;\n                }\n            }\n        }\n        option {\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;       /* Remove default arrow */\n            background: black;\n            color: white;\n        }\n    }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}