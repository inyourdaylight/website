{"ast":null,"code":"export default {\n  name: 'NavSticky',\n  props: {\n    scrollLimit: {\n      type: Number,\n      default: 0\n    },\n    scrollPos: {\n      type: Number,\n      default: 0\n    }\n  },\n  watch: {\n    scrollPos(scrollPos) {\n      let glowSize = this.$refs.glow.getBoundingClientRect().height;\n      this.$refs.glow.style = `top: ${scrollPos * ((this.scrollBarHeight - glowSize / 2) / this.scrollLimit)}px`;\n    }\n  },\n  methods: {\n    getTime() {\n      this.date = new Date();\n      this.minute = this.date.getMinutes().toString().padStart(2, '0');\n      this.hour = this.date.getHours().toString();\n      console.log(this.hour, this.minute);\n    }\n  },\n  data() {\n    return {\n      date: new Date(),\n      scrollBarHeight: 0,\n      minute: 0,\n      hour: 0\n    };\n  },\n  mounted() {\n    this.getTime();\n    this.scrollBarHeight = this.$refs.scrollbar.getBoundingClientRect().height;\n    let countdownTilMinuteInterval = (60 - this.date.getSeconds()) * 1000 + this.date.getMilliseconds() + 1;\n    // console.log(this.date.getMilliseconds());\n    // let countdownTilMinuteInterval = 1000;\n    console.log(countdownTilMinuteInterval);\n    setTimeout(() => {\n      console.log(\"minute change\");\n      this.getTime();\n    }, countdownTilMinuteInterval);\n  }\n};","map":{"version":3,"mappings":"AAwBA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,SAAS,EAAE;MACTH,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDE,KAAK,EAAE;IACLD,SAAS,CAACA,SAAS,EAAE;MACnB,IAAIE,QAAO,GAAI,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,qBAAqB,EAAE,CAACC,MAAM;MAC7D,IAAI,CAACH,KAAK,CAACC,IAAI,CAACG,KAAI,GAAK,QAAOP,SAAQ,IAAK,CAAC,IAAI,CAACQ,eAAc,GAAKN,QAAQ,GAAI,CAAC,IAAI,IAAI,CAACN,WAAW,CAAE,IAAE;IAC7G;EACF,CAAC;EACDa,OAAO,EAAE;IACPC,OAAO,GAAG;MACR,IAAI,CAACC,IAAG,GAAI,IAAIC,IAAI;MACpB,IAAI,CAACC,MAAK,GAAI,IAAI,CAACF,IAAI,CAACG,UAAU,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAChE,IAAI,CAACC,IAAG,GAAI,IAAI,CAACN,IAAI,CAACO,QAAQ,EAAE,CAACH,QAAQ,EAAE;MAC3CI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,IAAI,EAAE,IAAI,CAACJ,MAAM,CAAC;IACrC;EACF,CAAC;EACDQ,IAAI,GAAG;IACL,OAAO;MACLV,IAAI,EAAE,IAAIC,IAAI;MACdJ,eAAe,EAAE,CAAC;MAClBK,MAAM,EAAC,CAAC;MACRI,IAAI,EAAC;IACP;EACF,CAAC;EAEDK,OAAO,GAAG;IACR,IAAI,CAACZ,OAAO,EAAE;IACd,IAAI,CAACF,eAAc,GAAI,IAAI,CAACL,KAAK,CAACoB,SAAS,CAAClB,qBAAqB,EAAE,CAACC,MAAM;IAC1E,IAAIkB,0BAAyB,GAAI,CAAC,EAAC,GAAI,IAAI,CAACb,IAAI,CAACc,UAAU,EAAE,IAAI,IAAG,GAAI,IAAI,CAACd,IAAI,CAACe,eAAe,EAAC,GAAI,CAAC;IACvG;IACA;IACAP,OAAO,CAACC,GAAG,CAACI,0BAA0B,CAAC;IACvCG,UAAU,CAAC,MAAM;MACfR,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,IAAI,CAACV,OAAO,EAAE;IAChB,CAAC,EAAEc,0BAA0B;EAC/B;AACF","names":["name","props","scrollLimit","type","Number","default","scrollPos","watch","glowSize","$refs","glow","getBoundingClientRect","height","style","scrollBarHeight","methods","getTime","date","Date","minute","getMinutes","toString","padStart","hour","getHours","console","log","data","mounted","scrollbar","countdownTilMinuteInterval","getSeconds","getMilliseconds","setTimeout"],"sourceRoot":"","sources":["/Users/rebj/Sites/inyourdaylight/src/components/NavSticky.vue"],"sourcesContent":["<template>\n  <div class=\"nav\">\n    <transition :key=\"hour+minute\" appear>\n      <p class=\"time\">\n        <span><img class=\"sun\" src=\"../assets/halfsun.svg\"/></span>\n        <span v-html=\"hour\"></span>:<span v-html=\"minute\"></span>\n      </p>\n    </transition>\n    <div class=\"logo\">\n      <a href=\"/\">\n        <img src=\"../assets/IYD-White-Small.svg\"/>\n      </a>\n    </div>\n    <div class=\"scrollbar\" ref=\"scrollbar\">\n      <img src=\"../assets/glow-sphere.svg\" ref=\"glow\"/>\n    </div>\n    <div class=\"hamburger\">\n      <img src=\"../assets/hamburger.svg\"/>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'NavSticky',\n  props: {\n    scrollLimit: {\n      type: Number,\n      default: 0\n    },\n    scrollPos: {\n      type: Number,\n      default: 0\n    }\n  },\n  watch: {\n    scrollPos(scrollPos) {\n      let glowSize = this.$refs.glow.getBoundingClientRect().height;\n      this.$refs.glow.style = `top: ${scrollPos * ((this.scrollBarHeight - (glowSize) / 2) / this.scrollLimit)}px`\n    }\n  },\n  methods: {\n    getTime() {\n      this.date = new Date;\n      this.minute = this.date.getMinutes().toString().padStart(2, '0');\n      this.hour = this.date.getHours().toString();\n      console.log(this.hour, this.minute);\n    },\n  },\n  data() {\n    return {\n      date: new Date,\n      scrollBarHeight: 0,\n      minute:0,\n      hour:0\n    }\n  },\n  \n  mounted() {\n    this.getTime();\n    this.scrollBarHeight = this.$refs.scrollbar.getBoundingClientRect().height;\n    let countdownTilMinuteInterval = (60 - this.date.getSeconds()) * 1000 + this.date.getMilliseconds() + 1;\n    // console.log(this.date.getMilliseconds());\n    // let countdownTilMinuteInterval = 1000;\n    console.log(countdownTilMinuteInterval);\n    setTimeout(() => {\n      console.log(\"minute change\");\n      this.getTime();\n    }, countdownTilMinuteInterval)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n@import \"../styles.scss\";\n.time {\n  color: $gold;\n  position: fixed;\n  top: 20px;\n  left: 20px;\n  .sun {\n    height: 20px;\n    padding-right: 5px;\n  }\n}\n.logo {\n  position: fixed;\n  left: 50%;\n  top: 20px;\n  transform: translateX(-50%);\n  img {\n    max-width: 100px;\n  }\n}\n.scrollbar {\n  position: fixed;\n  right: 30px;\n  height: 50vh;\n  border-right: 1px solid white;\n  top: 50%;\n  transform: translateY(-50%);\n  img {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    top: 0;\n  }\n}\n.hamburger {\n  position: fixed;\n  right: 20px;\n  top: 30px;\n  img {\n    width: 30px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}