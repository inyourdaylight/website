{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"inner\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FooterNav = _resolveComponent(\"FooterNav\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.components, (item, i) => {\n    return _openBlock(), _createBlock(_resolveDynamicComponent(item), {\n      key: i,\n      id: item\n    }, null, 8 /* PROPS */, [\"id\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createVNode(_component_FooterNav)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAO;;;6DAAfC,oBAEQ,OAFRC,UAEQ,sBADJC,oBAAsFC,6BAAvDC,gBAAU,GAAtBC,IAAI,EAAEC,CAAC;yBAA1BC,aAAsFC,yBAA7BH,IAAI;MAAjBI,GAAG,EAAEH,CAAC;MAAcP,EAAE,EAAEM;;oCAEtEK,aAAuBC","names":["id","_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","$data","item","i","_createBlock","_resolveDynamicComponent","key","_createVNode","_component_FooterNav"],"sourceRoot":"","sources":["/Users/rebj/Sites/staging-iyd/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"inner\">\n      <component v-for=\"(item, i) in components\" :key=\"i\" :is=\"item\" :id=\"item\"></component>\n    </div>\n    <FooterNav></FooterNav>\n</template>\n\n<script>\nimport {toRaw} from \"vue\";\nexport default {\n  name: 'App',\n  components: {\n  },\n  props: {\n    scrollPos: {\n      type: Number,\n      default: 0\n    }\n  },\n  watch: {\n    scrollPos: {\n      handler(scrollPos) {\n        let scrolledComponent = document.getElementById(this.components[this.positions.filter(item => scrollPos >= item).length - 1]);\n      if (this.positions.filter(item => scrollPos >= item).length > 0 && !scrolledComponent.className.includes(\"fadein\")) {\n        scrolledComponent.className += \" fadein\";\n      }\n      }\n    }\n  },\n  methods: {\n  },\n  data() {\n    return {\n      components: [\n        'HomepageBanner',\n        'TextandFadedBG',\n        'GoldSquareSection',\n        'CarouselText',\n        'ImagesGallery'\n      ],\n      positions: []\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.positions = [...this.components].map((id) => {\n        let component = document.getElementById(id);\n        console.log(component)\n        return (component.getBoundingClientRect().top - ((window.innerHeight - component.getBoundingClientRect().height) / 2) - (window.innerWidth / 8)) + window.scrollY;\n      })\n      console.log(toRaw(this.positions));\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"fonts.scss\";\n@import \"styles.scss\";\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}